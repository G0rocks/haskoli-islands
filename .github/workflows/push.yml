name: Push

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false
on:
  push:
    branches:
      - conda
      - main
    paths:
      - "projects/**"
      - "cli/**"
      - ".github/**"
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      deploy-url: ${{ steps.deployment.outputs.page_url }}/${{ env.BRANCH_SLUG }}
    environment:
      name: ${{ github.ref_name }}
      url: ${{ steps.deployment.outputs.page_url }}/${{ env.BRANCH_SLUG }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          echo ${{ github.head_ref }}
          slug=$(./.github/slugify.sh ${{ github.ref_name }})
          echo "BRANCH_SLUG=$slug" >> $GITHUB_ENV
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          python-version: 3.10.10
          channels: conda-forge,defaults
          mamba-version: "*"
          channel-priority: true
          use-mamba: true
          environment-file: environment.yml
          activate-environment: edbook
      # TODO: needs work
      # - name: Check for Conda cache
      #   id: conda-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/conda_pkgs_dir
      #     key: conda-${{ runner.os }}-${{hashFiles('environment.yml')}}
      - name: üöß Build all (pr)
        # if: github.event_name == 'pull_request' && github.event.label.name == 'build-all'
        id: build-all
        run: |
          make build-all
      - name: üìÇ Prepare pages for feature deployment
        run: |
          mv _build/forsida/* _build/
          mkdir -p dist/${{ env.BRANCH_SLUG }}
          mv _build/* dist/${{ env.BRANCH_SLUG }}/
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: dist
      - name: üìÇ Deploy feature to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        with:
          preview: true

  notify-discord-merge:
    needs: [build-all]
    name: Notify Discord (merged to main)
    runs-on: ubuntu-20.04
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Notify merge
        run: |
          content_title="N√Ω √∫tg√°fa er kominn √≠ lofti√∞ üéâ"
          title="${{ github.base_ref }} ‚Ü©Ô∏è ${{ github.head_ref }}"
          color=32768
          description="${{ github.event.pull_request.body }}"
          url=${{ github.event.pull_request.html_url }}
          author_name=${{ github.event.pull_request.user.login}}
          author_url=${{ github.event.pull_request.user.url}}
          author_avatar=${{ github.event.pull_request.user.avatar_url}}
          branch=${{ github.head_ref }}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": $color,
                "fields": [
                  "name": "url",
                  "value": "[Sko√∞a √° edbook](https://edbook.hi.is)"
                ]
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"

  notify-discord-build-failed:
    needs: [build-all]
    if: always() && needs.build-all.result == 'failure' && github.event_name == 'push'
    name: Notify Discord (build failed)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Notify build or deploy failed
        run: |
          workflow_url="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          content_title="Eitthva√∞ f√≥r √∫rskei√∞is ‚ò†Ô∏è"
          title="${{ env.BRANCH_NAME }}"
          color=16711680
          description="Ekki t√≥kst a√∞ byggja og/e√∞a deploya branchinu _${{ env.BRANCH_NAME }}_"
          url="$workflow_url"
          author_name=${{ github.event.push.sender.login}}
          author_url=${{ github.event.push.sender.url}}
          author_avatar=${{ github.event.push.sender.avatar_url}}

          payload=$(cat <<EOF
          {
            "content": "$content_title",
            "avatar_url": "https://www.shareicon.net/data/128x128/2015/08/28/92005_social-media_512x512.png",
            "embeds": [
              {
                "title": "$title",
                "description": "$description",
                "url": "$url",
                "color": $color,
                "author": {
                  "name": "$author_name",
                  "url": "$author_url",
                  "icon_url": "$author_avatar"
                }
              }
            ]
          }
          EOF
          )
          ./.github/discord.sh  \
            -w ${{ secrets.DISCORD_WEBHOOK }} \
            -c "$payload"
